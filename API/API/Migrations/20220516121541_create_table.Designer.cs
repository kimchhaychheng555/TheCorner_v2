// <auto-generated />
using System;
using API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220516121541_create_table")]
    partial class create_table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("API.Models.CategoryModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("data_category");
                });

            modelBuilder.Entity("API.Models.DocumentModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("key_name")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("label")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("value")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("data_document");
                });

            modelBuilder.Entity("API.Models.PermissionModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("role_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("slug")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("data_permission");
                });

            modelBuilder.Entity("API.Models.PrintModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("key")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<byte[]>("sale_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("id");

                    b.HasIndex("sale_id");

                    b.ToTable("data_print");
                });

            modelBuilder.Entity("API.Models.ProductModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("category_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<string>("image")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,5)");

                    b.Property<bool>("stockable")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.ToTable("data_product");
                });

            modelBuilder.Entity("API.Models.RoleModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("data_role");
                });

            modelBuilder.Entity("API.Models.SaleModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("discount")
                        .HasColumnType("decimal(19,5)");

                    b.Property<string>("discount_type")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("grand_total")
                        .HasColumnType("decimal(19,5)");

                    b.Property<string>("invoice_number")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_paid")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("sale_date")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,5)");

                    b.Property<byte[]>("table_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<decimal>("vat")
                        .HasColumnType("decimal(19,5)");

                    b.HasKey("id");

                    b.HasIndex("table_id");

                    b.ToTable("data_sale");
                });

            modelBuilder.Entity("API.Models.SaleProductModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_free")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_remove_stock_done")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,5)");

                    b.Property<byte[]>("product_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,5)");

                    b.Property<byte[]>("sale_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("sale_id");

                    b.ToTable("data_sale_product");
                });

            modelBuilder.Entity("API.Models.StockInventoryModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("min_quantity")
                        .HasColumnType("decimal(19,5)");

                    b.Property<byte[]>("product_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<decimal>("quantity_stock")
                        .HasColumnType("decimal(19,5)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("data_stock_inventory");
                });

            modelBuilder.Entity("API.Models.StockTransactionModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("product_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,5)");

                    b.Property<string>("type")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("data_stock_transaction");
                });

            modelBuilder.Entity("API.Models.TableModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("data_table");
                });

            modelBuilder.Entity("API.Models.UserModel", b =>
                {
                    b.Property<byte[]>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("created_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("deleted_by")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("password")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("profile")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<byte[]>("role_id")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("username")
                        .HasColumnType("text")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("data_user");
                });

            modelBuilder.Entity("API.Models.PermissionModel", b =>
                {
                    b.HasOne("API.Models.RoleModel", "role")
                        .WithMany("permissions")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("API.Models.PrintModel", b =>
                {
                    b.HasOne("API.Models.SaleModel", "sale")
                        .WithMany()
                        .HasForeignKey("sale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sale");
                });

            modelBuilder.Entity("API.Models.ProductModel", b =>
                {
                    b.HasOne("API.Models.CategoryModel", "category")
                        .WithMany("products")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("API.Models.SaleModel", b =>
                {
                    b.HasOne("API.Models.TableModel", "table")
                        .WithMany()
                        .HasForeignKey("table_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("table");
                });

            modelBuilder.Entity("API.Models.SaleProductModel", b =>
                {
                    b.HasOne("API.Models.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.SaleModel", "sale")
                        .WithMany("sale_products")
                        .HasForeignKey("sale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("sale");
                });

            modelBuilder.Entity("API.Models.StockInventoryModel", b =>
                {
                    b.HasOne("API.Models.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("API.Models.StockTransactionModel", b =>
                {
                    b.HasOne("API.Models.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("API.Models.UserModel", b =>
                {
                    b.HasOne("API.Models.RoleModel", "role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("API.Models.CategoryModel", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("API.Models.RoleModel", b =>
                {
                    b.Navigation("permissions");
                });

            modelBuilder.Entity("API.Models.SaleModel", b =>
                {
                    b.Navigation("sale_products");
                });
#pragma warning restore 612, 618
        }
    }
}
